// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/14/2020 01:17:31"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          lab3
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module lab3_vlg_vec_tst();
// constants                                           
// general purpose registers
reg pin_0;
reg pin_1;
reg pin_2;
reg pin_3;
reg pin_4;
reg pin_5;
reg pin_6;
reg pin_7;
reg pin_8;
reg pin_9;
reg pin_10;
reg pin_11;
// wires                                               
wire ledr0;
wire ledr1;
wire ledr2;
wire ledr3;
wire ledr4;
wire ledr5;
wire ledr6;
wire ledr7;
wire ledr8;
wire ledr9;

// assign statements (if any)                          
lab3 i1 (
// port map - connection between master ports and signals/registers   
	.ledr0(ledr0),
	.ledr1(ledr1),
	.ledr2(ledr2),
	.ledr3(ledr3),
	.ledr4(ledr4),
	.ledr5(ledr5),
	.ledr6(ledr6),
	.ledr7(ledr7),
	.ledr8(ledr8),
	.ledr9(ledr9),
	.pin_0(pin_0),
	.pin_1(pin_1),
	.pin_2(pin_2),
	.pin_3(pin_3),
	.pin_4(pin_4),
	.pin_5(pin_5),
	.pin_6(pin_6),
	.pin_7(pin_7),
	.pin_8(pin_8),
	.pin_9(pin_9),
	.pin_10(pin_10),
	.pin_11(pin_11)
);
initial 
begin 
#1000000 $finish;
end 

// pin_11
initial
begin
	pin_11 = 1'b0;
end 

// pin_10
initial
begin
	pin_10 = 1'b0;
end 

// pin_9
initial
begin
	pin_9 = 1'b1;
end 

// pin_8
initial
begin
	pin_8 = 1'b1;
	pin_8 = #400000 1'b0;
	pin_8 = #400000 1'b1;
end 

// pin_7
initial
begin
	pin_7 = 1'b1;
end 

// pin_6
initial
begin
	pin_6 = 1'b1;
end 

// pin_5
initial
begin
	pin_5 = 1'b0;
end 

// pin_4
initial
begin
	pin_4 = 1'b0;
end 

// pin_3
initial
begin
	pin_3 = 1'b1;
end 

// pin_2
initial
begin
	repeat(3)
	begin
		pin_2 = 1'b0;
		pin_2 = #160000 1'b1;
		# 160000;
	end
	pin_2 = 1'b0;
end 

// pin_1
initial
begin
	repeat(6)
	begin
		pin_1 = 1'b0;
		pin_1 = #80000 1'b1;
		# 80000;
	end
	pin_1 = 1'b0;
end 

// pin_0
initial
begin
	repeat(12)
	begin
		pin_0 = 1'b0;
		pin_0 = #40000 1'b1;
		# 40000;
	end
	pin_0 = 1'b0;
end 
endmodule

